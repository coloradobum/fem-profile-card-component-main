/*  
vw and vh are like width and height.
but are a percentage of the view port

100vh is 100% of the height.

key points
there must be a min height on the container
100vh sets the container to 100%h of the viewport
then within the container the items will be centered.
this makes sense.

*/

.container {
  /* background-color: hsl(185, 75%, 39%); */

  /*    
  background shorthand for:
  - background-color
  - background-image
  - background-repeat
  - background-position
  */

  background: 
    url('../public/bg-pattern-top.svg') no-repeat,
    url('../public/bg-pattern-bottom.svg') no-repeat;
  
  /* background-color: hsl(185, 75%, 39%); */
  background-color: var(--dark-cyan);
  
  background-position: top -45vh right 55vw, left 50vw top 50vh;

  min-height: 100vh;

/* using css grid */
  display: grid;
  /* justify-content: center;
  align-content: center; */

  /* shorthand for above 2 lines */
  place-items: center;


/* using flexbox */
  /* display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center; */
}

.main {
  background-color:white;
  background-image: url('../public/bg-pattern-card.svg');
  background-position: top;
  background-repeat: no-repeat;

  border-radius: 20px;
  width: 326px;
  height: 374px;

  display: grid;
  grid-template-rows: 23% 27% 26% 24%;

  /* text alignment for div elements */
  text-align: center;
}

.imagewrapper img {
  border-radius: 90%;
  /* margin-right: auto; */
  /* border: 10px solid white; */
}

.header h1 {
  font-size: 1.0rem;
}

.stats {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  align-content: center;
  /* text-align: center; */
  /* place-items: center; */
  border-top: 1px solid var(--dark-gray);
  margin-top: 1rem;
}

.age {
  font-weight: 400;
  color: var(--dark-grayish-blue)

}

.city {
  font-weight: 400;
  color: var(--dark-grayish-blue)
}

.metric {
  font-weight: 400;
  color: var(--dark-grayish-blue);
  font-size: 0.6rem;
}